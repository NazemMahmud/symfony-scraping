version: '3'

services:
  nginx-service:
    image: nginx:1.20
    container_name: NGINX-CONTAINER
    ports:
      - "8084:80"
      - "443:443"
    volumes:
      - ./:/var/www/project
      - ./docker-conf/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php-service
      - mysql-service
      - phpmyadmin
      - redis
    networks:
      - scrape_api_docker

  php-service:
    build:
      context: ./docker-conf/php
    container_name: PHP-CONTAINER
    ports:
      - "9001:9000"
    volumes:
      - ./:/var/www/project
      - ./docker-conf/php/www.conf:/usr/local/etc/php-fpm.d/www.conf:rw
      - ./docker-conf/php/php.ini:/usr/local/etc/php/php.ini:rw
    depends_on:
      - mysql-service
      - redis
    networks:
      - scrape_api_docker

  mysql-service:
    image: mysql:8.0
    container_name: DB-CONTAINER
    ports:
      - "4036:${DB_PORT}"
    volumes:
      - dbdata:/var/lib/mysql/
      - ./docker-conf/mysql/my.cnf:/etc/mysql/my.cnf
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
    networks:
      - scrape_api_docker

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    environment:
      PMA_HOST: mysql-service
      PMA_USER: ${DB_USERNAME}
      PMA_PASSWORD: ${DB_PASSWORD}
    ports:
      - "8188:80"
    networks:
      - scrape_api_docker

  redis:
    image: 'redis:alpine'
    ports:
      - '${REDIS_PORT:-6379}:6379'
    volumes:
      - ${REDIS_PATH}:/data
    networks:
      -  scrape_api_docker
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      retries: 3
      timeout: 5s

networks:
  scrape_api_docker:
    driver: "bridge"

volumes:
  dbdata:
    driver: local
